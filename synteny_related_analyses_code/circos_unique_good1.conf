luminance = lum80
#use_rules = yes
# RGB/HSV color definitions, color lists, location of fonts, fill patterns.
# Included from Circos distribution.
<<include colors_fonts_patterns.conf>>

# Debugging, I/O an dother system parameters
# Included from Circos distribution.
<<include ideogram.conf>>
<<include ticks.conf>>

<image>
file* = circos.png
radius*  = 1500p
#background = white
#angle_offset   = -90
#background = transparent
# by default angle=0 is at 3 o'clock position
#angle_offset   = -90
<<include image.conf>>
</image>

karyotype = Can_karyotype.txt,Col_karyotype.txt

chromosomes_units = 1000000
chromosomes_display_default = yes
chromosomes_reverse = caChr1_RagTag_polished;caChr2_RagTag_polished;caChr3_RagTag_polished;caChr4_RagTag_polished;caChr5_RagTag_polished;caChrC_RagTag_polished;caChrM_RagTag_polished

<ideogram> 
#change the size of the ring in ideogram.position.conf
radius*    = 0.7r
thickness*   = 35p
label_radius*  = 1.07r
</ideogram>

# plots
<plots>
<plot>
type = highlight
file = Can_Col.gap.txt
r0 = dims(ideogram,radius_inner)
r1 = dims(ideogram,radius_outer)
thickness = 5
z = 10
</plot>

<plot>
type = histogram
file = Can_Col.hifi.coverage.1k.bed
max   = 70
min   = 0
r1    = 0.68r
r0    = 0.60r
z = 20

fill_color = lblue
thickness = 0.1
stroke_color = grey
extend_bin      = no
sort_bin_values = no

<axes>
<axis>
color     = lgrey
thickness = 0.1
spacing   = 0.5r
</axis>
</axes>

</plot>


<plot>
type = histogram
file = Can_Col.ont.coverage.1k.bed
max   = 400
min   = 0
r1    = 0.76r
r0    = 0.685r
z = 20

fill_color = lgreen
thickness = 0.1
stroke_color = grey
extend_bin      = no
sort_bin_values = no

<axes>
<axis>
color     = lgrey
thickness = 0.1
spacing   = 0.5r
</axis>
</axes>

</plot>


<plot>
type = line
#thickness = 10
file = Col_Can_GCcontent_10k.bed
max   = 0.65
min   = 0.15
r1    = 0.84r
r0    = 0.765r
z = 20
#fill_color = vvlgrey_a3
thickness = 3
color   = dgrey
#stroke_color = grey
#extend_bin      = no
#sort_bin_values = no

#<rules>
#use  = conf(use_rules)
#<rule>
#condition  = 1
#fill_color = eval(qw(dorange orange lorange lblue blue dblue)[remap_int(var(value),0,100,0,5)]) 
#</rule>
#</rules>

#<backgrounds>
#<background>
#color     = vvvvlgrey
#</background>
#</backgrounds>

<axes>
<axis>
color     = lgrey
thickness = 0.2
spacing   = 0.5r
</axis>
</axes>

</plot>


<plot>
type = line
#thickness = 10
file = Col_Can_repeat_density
max   = 45
min   = 0
r1    = 0.92r
r0    = 0.845r
z = 20
#fill_color = vvlgrey_a3
thickness = 3
color   = dgreen
#
<axes>
<axis>
color     = lgrey
thickness = 0.2
spacing   = 0.5r
</axis>
</axes>

</plot>


<plot>
type = histogram
file = Can_Col.CG.1k.bed
max   = 100
min   = 0
r1    = 0.99r
r0    = 0.925r
z = 20
fill_color = vlorange
thickness = 0.1
stroke_color = lgrey
extend_bin      = no
sort_bin_values = no

<axes>
<axis>
color     = lgrey
thickness = 0.1
spacing   = 0.5r
</axis>
</axes>

</plot>

</plots>

# links
<links>

radius = 0.59r
crest  = 1
#color = vlgrey
ribbon = yes
flat = no #twist the chromosomes
bezier_radius = 0r
bezier_radius_purity = 0.5

<link>
file = Col_Can_non-uniq.links.bundles
thickness = 4
color = grey_a5

<rules>
<rule>
condition  = var(interchr)
condition = between(coChr1_RagTag_polished,caChr2_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr1_RagTag_polished,caChr3_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr1_RagTag_polished,caChr4_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr1_RagTag_polished,caChr5_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr2_RagTag_polished,caChr1_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr2_RagTag_polished,caChr3_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr2_RagTag_polished,caChr4_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr2_RagTag_polished,caChr5_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr3_RagTag_polished,caChr1_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr3_RagTag_polished,caChr2_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr3_RagTag_polished,caChr4_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr3_RagTag_polished,caChr5_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr4_RagTag_polished,caChr1_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr4_RagTag_polished,caChr2_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr4_RagTag_polished,caChr3_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr4_RagTag_polished,caChr5_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr5_RagTag_polished,caChr1_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr5_RagTag_polished,caChr2_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr5_RagTag_polished,caChr3_RagTag_polished)
color      = lorange
</rule>

<rule>
condition  = var(interchr)
condition = between(coChr5_RagTag_polished,caChr4_RagTag_polished)
color      = lorange
</rule>

#<rule>
#condition  = var(interchr)
#condition = between(coChr5_RagTag_polished,caChr1_RagTag_polished)
#color      = lorange_a5
#</rule>


</rules>
</link>

<link>
file = Col_Can_non-uniq_inverted.links.bundles
color = dpurple_a3
thickness = 5
stroke_color = dpurple
stroke_thickness = 0.05
z = 20
</link>

</links>

# Debugging, I/O an dother system parameters
# Included from Circos distribution.
<<include housekeeping.conf>>

data_out_of_range* = trim


